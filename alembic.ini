[alembic]
# path to migration scripts
script_location = migrations

# template used to generate migration files
# file_template = %%(rev)s_%%(slug)s

# sys.path path, will be prepended to sys.path if present.
# defaults to the current working directory.
prepend_sys_path = .

# timezone to use when rendering the date within the migration file
# as well as the filename.
# If specified, requires the python-dateutil library that is included
# by default with Alembic.
# timezone =

# max length of characters to apply to the
# "slug" field
# truncate_slug_length = 40

# set to 'true' to allow .pyc and .pyo files without '.py'
# purge_pyc_files = false

# revision ordering for 'alembic history' command
# depends on dateutil package
# revision_environment = false

# set to 'true' to stream output via sys.stdout, rather
# than via a buffer. Altering this value is seldom necessary.
# output_buffer =

# the output encoding used when writing migration files
# output_encoding = utf-8

sqlalchemy.url = postgresql://user:password@db:5432/orgchart_db


[post_write_hooks]
# post_write_hooks defines scripts or Python functions that are run
# on newly generated revision files.  See the documentation for further
# detail and examples.

# format using "black" - use the console_scripts runner, which handles
# virtualenv activation etc.
# hooks = black
# black.type = console_scripts
# black.entrypoint = black
# black.options = -l 79 %%(path)s

# lint with "ruff"
# hooks = ruff
# ruff.type = console_scripts
# ruff.entrypoint = ruff
# ruff.options = --fix %%(path)s

# format with "autopep8"
# hooks = autopep8
# autopep8.type = console_scripts
# autopep8.entrypoint = autopep8
# autopep8.options = --in-place %%(path)s

# format with "yapf"
# hooks = yapf
# yapf.type = console_scripts
# yapf.entrypoint = yapf
# yapf.options = -i %%(path)s


[loggers]
keys = root,sqlalchemy,alembic

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = WARN
handlers = console
qualname =

[logger_sqlalchemy]
level = WARN
handlers =
qualname = sqlalchemy.engine

[logger_alembic]
level = INFO
handlers =
qualname = alembic

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %%(levelname)-5.5s [%%(name)s] %%(message)s
datefmt = %%H:%%M:%%S 